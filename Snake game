<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Snake Game</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-T6c99+7fWNgYIeGz0cUhO2JQ+TwoGzSb9boCBxNpvoJvNK0Cpn83rs+MwNl867G0Iwg" crossorigin="anonymous">
    <style>
        body {
            background-color: #f0f0f0;
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
        }

        #game-board {
            border: 1px solid #000;
            width: 400px;
            height: 400px;
            background-color: #fff;
        }

        .snake {
            width: 20px;
            height: 20px;
            background-color: green;
            border-radius: 50%;
        }

        .food {
            width: 20px;
            height: 20px;
            background-color: red;
            border-radius: 50%;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-md-6">
                <h1 class="text-center mb-4">Snake Game</h1>
                <div id="game-board"></div>
            </div>
        </div>
    </div>

    <script>
        const gameBoard = document.getElementById('game-board');
        const gameWidth = gameBoard.clientWidth;
        const gameHeight = gameBoard.clientHeight;
        const blockSize = 20;
        const rows = gameHeight / blockSize;
        const cols = gameWidth / blockSize;

        let snake = [{ x: 10, y: 10 }];
        let food = { x: Math.floor(Math.random() * cols), y: Math.floor(Math.random() * rows) };
        let velocityX = 0;
        let velocityY = 0;
        let gameOver = false;

        function drawGame() {
            gameBoard.innerHTML = '';

            // Draw food
            const foodElement = document.createElement('div');
            foodElement.classList.add('food');
            foodElement.style.left = `${food.x * blockSize}px`;
            foodElement.style.top = `${food.y * blockSize}px`;
            gameBoard.appendChild(foodElement);

            // Draw snake
            snake.forEach((segment, index) => {
                const snakeElement = document.createElement('div');
                snakeElement.classList.add('snake');
                snakeElement.style.left = `${segment.x * blockSize}px`;
                snakeElement.style.top = `${segment.y * blockSize}px`;
                gameBoard.appendChild(snakeElement);
            });
        }

        function changeDirection(event) {
            const key = event.keyCode;

            if ((key === 37 || key === 39) && velocityX === 0) {
                velocityX = (key === 37) ? -1 : 1;
                velocityY = 0;
            } else if ((key === 38 || key === 40) && velocityY === 0) {
                velocityX = 0;
                velocityY = (key === 38) ? -1 : 1;
            }
        }

        function checkCollision() {
            // Check for wall collision
            if (snake[0].x < 0 || snake[0].x >= cols || snake[0].y < 0 || snake[0].y >= rows) {
                gameOver = true;
            }

            // Check for self-collision
            for (let i = 1; i < snake.length; i++) {
                if (snake[0].x === snake[i].x && snake[0].y === snake[i].y) {
                    gameOver = true;
                }
            }
        }

        function gameLoop() {
            if (!gameOver) {
                setTimeout(() => {
                    changeSnakePosition();
                    checkCollision();
                    eatFood();
                    drawGame();
                    gameLoop();
                }, 100);
            } else {
                alert('Game Over!');
            }
        }

        function changeSnakePosition() {
            const head = { x: snake[0].x + velocityX, y: snake[0].y + velocityY };
            snake.unshift(head);

            if (!hasEatenFood) {
                snake.pop();
            }
        }

        function eatFood() {
            if (snake[0].x === food.x && snake[0].y === food.y) {
                food = { x: Math.floor(Math.random() * cols), y: Math.floor(Math.random() * rows) };
                hasEatenFood = true;
            } else {
                hasEatenFood = false;
            }
        }

        document.addEventListener('keydown', changeDirection);
        gameLoop();
    </script>

</body>
</html>
